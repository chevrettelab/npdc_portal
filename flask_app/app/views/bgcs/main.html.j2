{% extends "layout.html.j2" %}
{% block content %}
  {% include "basic_header.html.j2" %}

  <div class="row">
    <div class="col">
      <div class="alert alert alert-primary">
          Our genomes database currently includes X strain genomes from X species (calculated by Mash cluster). X,XXX of the genomes are Actinobacterial, mostly from the genera xxx (x%), xxx (x%), and xxx (x %). Among the most underrepresented genera are x (x genomes), x (x genomes), x (x genomes), and x (x genomes).
      </div>
    </div>
  </div>
  <div class="row m-2">
    <div class="col">
      <div class="bs-component">
        <div class="accordion">
          <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
              <button class="accordion-button collapsed" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                <strong>Filtering</strong>
              </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne">
              <div class="accordion-body" id="select_result">
                (feature not yet implemented)
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col">
      <div class="h3 btn-secondary text-center p-2">&nbsp;</div>
    </div>
  </div>

  <div class="row">
    <div class="col">
      <table id="list_bgcs" class="table table-striped table-bordered table-hover nowrap">
        <thead class="thead-light">
          <tr>
            <th>Genome</th>
            <th>Name</th>
            <th>Mash cluster</th>
            <th>Contig</th>
            <th>BGC</th>
            <th>GCF</th>
            <th>BGC quality</th>
            <th>BGC class</th>
            <th>Size (kb)</th>
            <th>Num. of genes</th>
            <th>MIBiG hit</th>
          </tr>
        </thead>
        <tbody class="tbody">
        </tbody>
        <script type="text/javascript">
          $(document).ready(function(){
            $("#list_bgcs").DataTable({
              searching: false,
              ordering:  false,
              serverSide: true,
              responsive: false,
              processing: true,
              aLengthMenu: [[50, 100, 500], [50, 100, 500]],
              iDisplayLength: 50,
              ajax: {
                url: "{{ url_for('root.page') }}api/bgcs/get_overview",
                type: "GET",
                data: function(d) {
                }
              },
              "columnDefs": [
                { className: "text-center", targets: [0, 4] },
                { className: "text-end", targets: [3, 8, 9] },
                { visible: false, searchable: false, targets: [3] },
                {
                  targets: 0,
                  render: function(data, type, row, meta) {
                    let [genome_id, npdc_id] = data;
                    let label = "NPDC-" + npdc_id;
                    return "<a href=\"{{ url_for('root.page') }}genomes/view/" + genome_id + "\"><button class=\"btn btn-primary\">" + label + "</button></a>";
                  }
                },
                {
                  targets: 1,
                  render: function(data, type, row, meta) {
                    return "<i><strong style='color: #222266;'>" + data + "</strong></i>";
                  }
                },
                {
                  targets:4,
                  render: function(data, type, row, meta) {
                    let [bgc_id, npdc_id, contig_num, region_name] = data;
                    let bgc_num = parseInt(region_name.split("region")[1], 10);
                    let label = "NPDC-" + npdc_id + ":" + "r" + contig_num + "c" + bgc_num;                      
                    return "<a href=\"{{ url_for('root.page') }}bgcs/view/" + bgc_id + "\"><button class=\"btn btn-primary\">" + label + "</button></a>";
                  }
                },
                {
                  targets: 5,
                  render: function(data, type, row, meta) {
                    return "GCF-" + data;
                  }
                },
                {
                  targets: 6,
                  render: function(data, type, row, meta) {
                    let html_text = "";
                    let badge_class = {
                      1: ["fragmented", "rounded-pill bg-warning"],
                      0: ["complete", "rounded-pill bg-success"]
                    };
                    html_text += "<span class='badge m-1 " + badge_class[data][1] + "'>" + badge_class[data][0] + "</span>";
                    return html_text;
                  }
                },
                {
                  "targets": 7,
                  render: function(data, type, row, meta) {
                    let html_text = "<ul class=\"list-unstyled mb-0\">";
                    data.forEach((bgc_class) => {
                      html_text += "<li>" + bgc_class + "</li>";
                    });
                    html_text += "</ul>";
                    return html_text;
                  }
                },
                {
                  "targets": 10,
                  render: function(data, type, row, meta) {
                    let [mibig_id, mibig_name, mibig_pct, cb_cutoff] = data;
                    let html_text = "n/a";

                    if (mibig_id > -1) {
                      html_text = "<a href='https://mibig.secondarymetabolites.org/repository/BGC" + String(mibig_id).padStart(7, '0') + "'>" + mibig_name + "</a>" + " (" + mibig_pct + "%)";
                      if (mibig_pct >= cb_cutoff) {
                        html_text = "<strong style='color: #222266;'>" + html_text + "</strong>";
                      } else {
                        html_text = "<i style='color: #999999;'>" + html_text + "</i>";
                      }
                    }

                    return html_text;
                  }
                }
              ]
            });
            $("#list_bgcs").width("100%");
          });
        </script>
      </table>
    </div>
  </div>

{% endblock %}