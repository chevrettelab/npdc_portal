BEGIN TRANSACTION;

DROP TABLE IF EXISTS "users";
CREATE TABLE IF NOT EXISTS "users" (
 "id" INTEGER PRIMARY KEY AUTOINCREMENT,
 "username" INTEGER NOT NULL UNIQUE,
 "email" TEXT NOT NULL UNIQUE,
 "token" TEXT NOT NULL,
 "num_login" INTEGER NOT NULL DEFAULT 0,
 "last_login" TEXT
);
CREATE INDEX IF NOT EXISTS users_num_login ON users(num_login);
CREATE INDEX IF NOT EXISTS users_last_login ON users(last_login);

DROP TABLE IF EXISTS "user_details";
CREATE TABLE IF NOT EXISTS "user_details" (
 "user_id" INTEGER NOT NULL UNIQUE,
 "first_name" TEXT NOT NULL,
 "last_name" TEXT NOT NULL,
 "is_academics" INTEGER NOT NULL,
 "job_title" TEXT,
 "country" TEXT NOT NULL,
 "have_nih_funding" INTEGER NOT NULL,
 "have_nsf_funding" INTEGER NOT NULL,
 "have_other_funding" INTEGER NOT NULL,
 FOREIGN KEY("user_id") REFERENCES users("id"),
 FOREIGN KEY("job_title") REFERENCES job_titles("code"),
 FOREIGN KEY("country") REFERENCES countries("code")
);
CREATE INDEX IF NOT EXISTS user_details_user_id ON user_details(user_id);
CREATE INDEX IF NOT EXISTS user_details_is_academics ON user_details(is_academics);
CREATE INDEX IF NOT EXISTS user_details_job_title ON user_details(job_title);
CREATE INDEX IF NOT EXISTS user_details_country ON user_details(country);
CREATE INDEX IF NOT EXISTS user_details_have_nih_funding ON user_details(have_nih_funding);
CREATE INDEX IF NOT EXISTS user_details_have_nih_funding ON user_details(have_nih_funding);
CREATE INDEX IF NOT EXISTS user_details_have_other_funding ON user_details(have_other_funding);

DROP TABLE IF EXISTS "job_titles";
CREATE TABLE IF NOT EXISTS "job_titles" (
 "id" INTEGER PRIMARY KEY AUTOINCREMENT,
 "name" TEXT NOT NULL
);
INSERT OR IGNORE INTO job_titles(name) VALUES('Professor');
INSERT OR IGNORE INTO job_titles(name) VALUES('Associate Professor');
INSERT OR IGNORE INTO job_titles(name) VALUES('Assistant Professor');
INSERT OR IGNORE INTO job_titles(name) VALUES('Staff Scientist');
INSERT OR IGNORE INTO job_titles(name) VALUES('Post-doc');
INSERT OR IGNORE INTO job_titles(name) VALUES('Ph.D. Student');
INSERT OR IGNORE INTO job_titles(name) VALUES('Master Student');
INSERT OR IGNORE INTO job_titles(name) VALUES('Undergrad Student');
INSERT OR IGNORE INTO job_titles(name) VALUES('Others');

DROP TABLE IF EXISTS "countries";
CREATE TABLE IF NOT EXISTS "countries" (
 "code" TEXT PRIMARY KEY,
 "name" TEXT NOT NULL,
 "lat" REAL NOT NULL,
 "long" REAL NOT NULL,
 "continent" TEXT NOT NULL
);
CREATE INDEX IF NOT EXISTS countries_code ON countries(code);
CREATE INDEX IF NOT EXISTS countries_name ON countries(name);
CREATE INDEX IF NOT EXISTS countries_lat ON countries(lat);
CREATE INDEX IF NOT EXISTS countries_long ON countries(long);
CREATE INDEX IF NOT EXISTS countries_continent ON countries(continent);

DROP TABLE IF EXISTS "user_downloads";
CREATE TABLE IF NOT EXISTS "user_downloads" (
 "user_id" INTEGER NOT NULL,
 "npdc_id" INTEGER NOT NULL,
 "count_download_genome" INTEGER NOT NULL DEFAULT 0,
 "last_download_genome" TEXT,
 "count_download_bgc" INTEGER NOT NULL DEFAULT 0,
 "last_download_bgc" TEXT,
 FOREIGN KEY("user_id") REFERENCES users("id")
);
CREATE INDEX IF NOT EXISTS user_downloads_user_id ON user_downloads(user_id);
CREATE INDEX IF NOT EXISTS user_downloads_npdc_id ON user_downloads(npdc_id);
CREATE INDEX IF NOT EXISTS user_downloads_count_download_genome ON user_downloads(count_download_genome);
CREATE INDEX IF NOT EXISTS user_downloads_last_download_genome ON user_downloads(last_download_genome);
CREATE INDEX IF NOT EXISTS user_downloads_count_download_bgc ON user_downloads(count_download_bgc);
CREATE INDEX IF NOT EXISTS user_downloads_last_download_bgc ON user_downloads(last_download_bgc);

COMMIT;