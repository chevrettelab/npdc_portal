BEGIN TRANSACTION;
DROP TABLE IF EXISTS "logs";
CREATE TABLE IF NOT EXISTS "logs" (
 "time" TEXT NOT NULL,
 "message" TEXT NOT NULL
);

DROP TABLE IF EXISTS "strains";
CREATE TABLE IF NOT EXISTS "strains" (
 "npdc_id" INTEGER PRIMARY KEY,
 "collection_date" TEXT,
 "collection_country" TEXT,
 "collection_region" TEXT,
 "empirical_category" TEXT,
 "empirical_genus" TEXT,
 "empirical_species" TEXT,
 "comment" TEXT
);
CREATE INDEX IF NOT EXISTS strains_collection_date ON strains(collection_date);
CREATE INDEX IF NOT EXISTS strains_collection_country ON strains(collection_country);
CREATE INDEX IF NOT EXISTS strains_collection_region ON strains(collection_region);
CREATE INDEX IF NOT EXISTS strains_empirical_category ON strains(empirical_genus);
CREATE INDEX IF NOT EXISTS strains_empirical_genus ON strains(empirical_species);

DROP TABLE IF EXISTS "strains_alt_ids";
CREATE TABLE IF NOT EXISTS "strains_alt_ids" (
 "npdc_id" INTEGER NOT NULL,
 "alt_id" TEXT NOT NULL,
 FOREIGN KEY("npdc_id") REFERENCES strains("npdc_id")
);
CREATE INDEX IF NOT EXISTS strains_alt_ids_alt_id ON strains_alt_ids(alt_id);

DROP TABLE IF EXISTS "media";
CREATE TABLE IF NOT EXISTS "media" (
 "code" TEXT PRIMARY KEY,
 "name" TEXT NOT NULL,
 "desc" TEXT NOT NULL
);
CREATE INDEX IF NOT EXISTS media_name ON media(name);

DROP TABLE IF EXISTS "strains_media";
CREATE TABLE IF NOT EXISTS "strains_media" (
 "npdc_id" INTEGER NOT NULL,
 "media_code" TEXT NOT NULL,
 FOREIGN KEY("npdc_id") REFERENCES strains("npdc_id")
);
CREATE INDEX IF NOT EXISTS strains_media_media_code ON strains_media(media_code);

DROP TABLE IF EXISTS "genomes";
CREATE TABLE "genomes" (
 "id" INTEGER PRIMARY KEY AUTOINCREMENT,
 "npdc_id" INTEGER NOT NULL UNIQUE,
 "genome_num_contigs" INTEGER NOT NULL,
 "genome_size_nt" INTEGER NOT NULL,
 "genome_n50" REAL NOT NULL,
 "genome_gc" REAL NOT NULL,
 "genome_gc_std" REAL NOT NULL,
 "genome_qc_completeness" REAL NOT NULL,
 "genome_qc_contamination" REAL NOT NULL,
 "genome_qc_heterogenity" REAL NOT NULL,
 "genome_qc_taxon" TEXT NOT NULL,
 "genome_gtdb_phylum" TEXT NOT NULL,
 "genome_gtdb_genus" TEXT NOT NULL,
 "genome_gtdb_species" TEXT NOT NULL,
 "genome_mash_species" TEXT NOT NULL,
 "is_cleaned_up" INTEGER NOT NULL,
 "orig_identifier" TEXT NOT NULL,
 FOREIGN KEY("npdc_id") REFERENCES strains("npdc_id")
);
CREATE INDEX IF NOT EXISTS genomes_genome_num_contigs ON genomes(genome_num_contigs);
CREATE INDEX IF NOT EXISTS genomes_genome_size_nt ON genomes(genome_size_nt);
CREATE INDEX IF NOT EXISTS genomes_genome_n50 ON genomes(genome_n50);
CREATE INDEX IF NOT EXISTS genomes_genome_qc_completeness ON genomes(genome_qc_completeness);
CREATE INDEX IF NOT EXISTS genomes_genome_qc_contamination ON genomes(genome_qc_contamination);
CREATE INDEX IF NOT EXISTS genomes_genome_qc_heterogenity ON genomes(genome_qc_heterogenity);
CREATE INDEX IF NOT EXISTS genomes_genome_qc_taxon ON genomes(genome_qc_taxon);
CREATE INDEX IF NOT EXISTS genomes_genome_gtdb_phylum ON genomes(genome_gtdb_phylum);
CREATE INDEX IF NOT EXISTS genomes_genome_gtdb_genus ON genomes(genome_gtdb_genus);
CREATE INDEX IF NOT EXISTS genomes_genome_gtdb_species ON genomes(genome_gtdb_species);
CREATE INDEX IF NOT EXISTS genomes_genome_mash_species ON genomes(genome_mash_species);
CREATE INDEX IF NOT EXISTS genomes_is_cleaned_up ON genomes(is_cleaned_up);

DROP TABLE IF EXISTS "bgcs";
CREATE TABLE "bgcs" (
 "id" INTEGER PRIMARY KEY AUTOINCREMENT,
 "genome_id" INTEGER NOT NULL,
 "contig_num" INTEGER NOT NULL,
 "region_num" INTEGER NOT NULL,
 "nt_start" INTEGER NOT NULL,
 "nt_end" INTEGER NOT NULL,
 "fragmented" INTEGER NOT NULL,
 "gcf" TEXT,
 "orig_identifier" TEXT NOT NULL,
 FOREIGN KEY("genome_id") REFERENCES genomes("id")
);
CREATE INDEX IF NOT EXISTS bgcs_genome_id ON bgcs(genome_id);
CREATE INDEX IF NOT EXISTS bgcs_contig_num ON bgcs(contig_num);
CREATE INDEX IF NOT EXISTS bgcs_region_num ON bgcs(region_num);
CREATE INDEX IF NOT EXISTS bgcs_nt_start ON bgcs(nt_start);
CREATE INDEX IF NOT EXISTS bgcs_nt_end ON bgcs(nt_end);
CREATE INDEX IF NOT EXISTS bgcs_fragmented ON bgcs(fragmented);
CREATE INDEX IF NOT EXISTS bgcs_gcf ON bgcs(gcf);

CREATE TABLE IF NOT EXISTS "bgc_class" (
 "id" INTEGER PRIMARY KEY AUTOINCREMENT,
 "name" TEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS "bgc_class_map" (
 bgc_id INTEGER NOT NULL,
 class_id INTEGER NOT NULL,
 FOREIGN KEY("bgc_id") REFERENCES bgc("id"),
 FOREIGN KEY("class_id") REFERENCES bgc_class("id")
);
CREATE INDEX IF NOT EXISTS bgc_class_map_bgc_id ON bgc_class_map(bgc_id);
CREATE INDEX IF NOT EXISTS bgc_class_map_class_id ON bgc_class_map(class_id);

CREATE TABLE IF NOT EXISTS "mibig" (
 "id" INTEGER PRIMARY KEY,
 "name" TEXT NOT NULL,
 "name_dereplicated" TEXT NOT NULL
);
CREATE INDEX IF NOT EXISTS mibig_name ON mibig(name);
CREATE INDEX IF NOT EXISTS mibig_name_dereplicated ON mibig(name_dereplicated);

CREATE TABLE IF NOT EXISTS "bgc_mibig_hit" (
 bgc_id INTEGER NOT NULL,
 mibig_id INTEGER NOT NULL,
 hit_pct REAL NOT NULL,
 FOREIGN KEY("bgc_id") REFERENCES bgc("id"),
 FOREIGN KEY("mibig_id") REFERENCES mibig("id")
);
CREATE INDEX IF NOT EXISTS bgc_mibig_hit_bgc_id ON bgc_mibig_hit(bgc_id);
CREATE INDEX IF NOT EXISTS bgc_mibig_hit_mibig_id ON bgc_mibig_hit(mibig_id);
CREATE INDEX IF NOT EXISTS bgc_mibig_hit_hit_pct ON bgc_mibig_hit(hit_pct);

CREATE TABLE IF NOT EXISTS "cds" (
 "id" INTEGER PRIMARY KEY AUTOINCREMENT,
 "genome_id" INTEGER NOT NULL,
 "contig_num" INTEGER NOT NULL,
 "nt_start" INTEGER NOT NULL,
 "nt_end" INTEGER NOT NULL,
 "strand" INTEGER NOT NULL,
 "locus_tag" TEXT,
 "annotation" TEXT,
 "aa_seq" TEXT,
 FOREIGN KEY("genome_id") REFERENCES genomes("id")
);
CREATE INDEX IF NOT EXISTS cds_genome_id ON cds(genome_id);
CREATE INDEX IF NOT EXISTS cds_contig_num ON cds(contig_num);
CREATE INDEX IF NOT EXISTS cds_nt_start ON cds(nt_start);
CREATE INDEX IF NOT EXISTS cds_nt_end ON cds(nt_end);
CREATE INDEX IF NOT EXISTS cds_strand ON cds(strand);

CREATE TABLE IF NOT EXISTS cds_bgc_map (
 cds_id INTEGER NOT NULL UNIQUE,
 bgc_id INTEGER NOT NULL,
 FOREIGN KEY("cds_id") REFERENCES cds("id"),
 FOREIGN KEY("bgc_id") REFERENCES bgcs("id")
);
CREATE INDEX IF NOT EXISTS cds_bgc_map_bgc_id ON cds_bgc_map(bgc_id);

DROP TABLE IF EXISTS "np_type";
CREATE TABLE IF NOT EXISTS "np_type" (
 "code" TEXT PRIMARY KEY,
 "name" TEXT NOT NULL
);
INSERT OR IGNORE INTO np_type VALUES("E", "Extracts");
INSERT OR IGNORE INTO np_type VALUES("F", "Fractions");
INSERT OR IGNORE INTO np_type VALUES("C", "Compounds");

DROP TABLE IF EXISTS "nps";
CREATE TABLE IF NOT EXISTS "nps" (
 "npdc_id" INTEGER NOT NULL,
 "type" TEXT NOT NULL,
 "media" TEXT,
 "date" TEXT,
 "volume_ul" REAL,
 "concentration_mM" REAL,
 "comment" TEXT,
 "orig_identifier" TEXT NOT NULL,
 FOREIGN KEY("npdc_id") REFERENCES strains("npdc_id"),
 FOREIGN KEY("type") REFERENCES np_type("code")
);
CREATE INDEX IF NOT EXISTS nps_npdc_id ON nps(npdc_id);
CREATE INDEX IF NOT EXISTS nps_type ON nps(type);
CREATE INDEX IF NOT EXISTS nps_media ON nps(media);
CREATE INDEX IF NOT EXISTS nps_date ON nps(date);
CREATE INDEX IF NOT EXISTS nps_volume_ul ON nps(volume_ul);
CREATE INDEX IF NOT EXISTS nps_concentration_mM ON nps(concentration_mM);

COMMIT;